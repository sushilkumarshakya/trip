{"version":3,"sources":["Services/Userservices.js","Components/Login.jsx","Components/Searchitem.jsx","Components/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["userService","logout","localStorage","removeItem","Login","props","state","username","password","submitted","error","handleChange","bind","handleSubmit","e","target","name","value","this","setState","preventDefault","axios","get","then","res","console","log","getItem","data","birth_year","setItem","history","push","className","id","onSubmit","type","placeholder","onChange","Component","Searchitem","Fragment","planets","map","planet","key","population","diameter","rotation_period","orbital_period","Search","search","results","handleSearch","length","filter","item","toLowerCase","indexOf","to","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fa4cf14.chunk.js","sourcesContent":["export const userService = {\n    logout\n};\n\nfunction logout() {\n    // remove username and password from local storage\n    localStorage.removeItem('username');\n    localStorage.removeItem('password');\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport \"./Login.css\"\nimport { userService } from '../Services/Userservices';\n\nexport default class Login extends Component {\n\n  constructor(props) {\n    super(props);   \n    userService.logout();\n    this.state = {\n        username: '',\n        password: '',\n        submitted: false,        \n        error: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n}\n\nhandleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n}\n\nhandleSubmit(e) {\n    e.preventDefault();\n        this.setState({ submitted: true });\n        const { username, password} = this.state;        \n        // stop here if form is invalid\n        if (!(username && password)) {\n            return;\n        }\n\n        axios.get(`https://swapi.co/api/people/1/`)\n          .then(res => {    \n            \n            console.log( localStorage.getItem('username'));\n            console.log( localStorage.getItem('password'));\n\n            const {name,birth_year} = res.data;\n            if(name === username && password === birth_year){\n              localStorage.setItem('username',name);\n              localStorage.setItem('password',birth_year);\n              this.props.history.push(\"/search\");\n            }else{\n              this.setState({ error: true });\n            }           \n            \n          })        \n      \n}  \n  \n  render() {\n    const { username, password, submitted,error } = this.state;\n    return (\n      <div>\n        <div className=\"wrapper fadeInDown\">\n          <h1>How Can I Help You find Planets?</h1>\n          \n          <hr/>\n          <div id=\"formContent\">\n            <div className=\"fadeIn first\">\n              <h3>User Login</h3>\n            </div> \n            {error && \n              <p className=\"text-danger\">Please Enter Valid Details</p>                            \n            }   \n            {submitted && !username &&\n              <p className=\"text-danger\">Username is required</p>                            \n            }\n            {submitted && !password &&\n              <p className=\"text-danger\">Password is required</p>                            \n            }                        \n            <form onSubmit={this.handleSubmit}>\n              <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"username\" placeholder=\"Name\" value={username} onChange={this.handleChange}/>\n              <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Password\" value={password} onChange={this.handleChange}/>\n              <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\"/>\n            </form> \n            <p>Test Username: Luke Skywalker</p>               \n            <p>Test Password: 19BBY</p>               \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Searchitem extends Component {    \n  render() {\n    return (\n      <React.Fragment>\n        {this.props.planets.map((planet)=>(\n            <tr key={planet.name}>\n                <td>{planet.name}</td>\n                <td>{planet.population}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n            </tr>\n        ))} \n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Searchitem from './Searchitem';\nimport {Link} from 'react-router-dom'\nexport default class Search extends Component {\n\n    constructor(props) {\n        super(props);       \n        this.state = {\n            search:'',\n            results: [],            \n            error: false\n        };\n        this.handleSearch = this.handleSearch.bind(this);  \n        if(!localStorage.getItem('username') && !localStorage.getItem('password')){\n            this.props.history.push(\"/\");\n        }     \n    }\n\n    handleSearch(e) {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });  \n        \n        axios.get(`https://swapi.co/api/planets/`)\n          .then(res => { \n          if(this.state.search.length !== 0){\n            this.setState({results:res.data.results.filter((item)=>{\n                return item.name.toLowerCase().indexOf(this.state.search) !== -1;\n              })});    \n          }else{\n            this.setState({results:[]});\n          }  \n              \n              console.log(res.data.results);          \n        })  \n    } \n\n    render() {\n        const { search } = this.state;\n        return (\n            <div>\n            <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item active\">\n                        <Link className=\"nav-link\" to=\"/\">Logout</Link>\n                    </li>    \n                </ul>\n            </nav>\n            <div className=\"container\">\n                <div className=\"form-group\">\n                    <label>Search Planets:</label>\n                    <input type=\"text\" name=\"search\" className=\"form-control\" placeholder=\"Alderaan\" value={search} onChange={this.handleSearch}/>\n                </div> \n\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Population</th>\n                        <th>Diameter</th>\n                        <th>Rotation Period</th>\n                        <th>Orbital Period</th>                        \n                    </tr>\n                    </thead>\n                    <tbody>\n                        <Searchitem planets={this.state.results}/>                                                                                  \n                    </tbody>\n                </table>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Route,Switch} from 'react-router-dom'\nimport './App.css';\nimport Login from './Components/Login';\nimport Search from './Components/Search';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <div>                            \n          <Switch>\n          <Route exact path=\"/\" component={Login}/>\n          <Route path=\"/search/\" component={Search}/>          \n          </Switch>   \n          </div>\n      </Router>    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}